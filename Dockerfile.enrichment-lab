# Stage 1: Build base with CUDA and PyTorch
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04 as base

LABEL maintainer="cdaprod.dev"
ENV DEBIAN_FRONTEND=noninteractive

# --- Install core dependencies: USE SYSTEM PYTHON! ---
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 python3-venv python3-dev python3-pip \
    git curl wget unzip ffmpeg libgl1 libglib2.0-0 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Optionally symlink python/pip for CLI
RUN ln -s /usr/bin/python3 /usr/bin/python && \
    ln -s /usr/bin/pip3 /usr/bin/pip

RUN pip install --upgrade pip wheel setuptools

# --- Stage 2: Builder for torch & deps ---
FROM base as builder
WORKDIR /app

# Install torch/torchvision for CUDA 11.8
RUN pip install --extra-index-url https://download.pytorch.org/whl/cu118 \
    torch==2.2.2+cu118 torchvision==0.17.2+cu118

COPY notebook_requirements.txt .
RUN pip install --upgrade --force-reinstall -r notebook_requirements.txt

RUN git clone https://github.com/openai/CLIP.git && \
    pip install ./CLIP && rm -rf CLIP

# --- Stage 3: Minimal runtime ---
FROM base as runtime
WORKDIR /workspace

# COPY everything from the builder's python3.10 site-packages to runtime
COPY --from=builder /usr/local/lib/python3.10 /usr/local/lib/python3.10
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /usr/local/include /usr/local/include
COPY --from=builder /usr/local/lib/python3.10/dist-packages /usr/local/lib/python3.10/dist-packages

# Mount volumes for notebooks and data
VOLUME ["/workspace/notebooks", "/workspace/videos", "/workspace/outputs"]

EXPOSE 8888

CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--allow-root", "--no-browser"]